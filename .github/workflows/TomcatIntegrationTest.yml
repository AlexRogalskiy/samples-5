name: Tomcat integration test
on:
   push:
      branches:
      - "*"
jobs: 
    tomcat_integration_test:
       runs-on: ubuntu-latest
       steps:
        - name: Checkout
          uses: actions/checkout@v2
  
        - name: Set up Helm
          uses: azure/setup-helm@v1
          with:
            version: v3.4.0
  
        - uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: Create kind cluster
          uses: helm/kind-action@v1.2.0
          with:
            cluster_name: tomcat-integration
  
        - name: Apply CRDs
          run: kubectl apply -f tomcat/k8s/crd.yaml

        - name: Set up Java and Maven
          uses: actions/setup-java@v2
          with:
            # java-version: ${{ matrix.java }}
            java-version: 15
            distribution: adopt-hotspot

        - name: cache
          uses: actions/cache@v2
          if: ${{ !env.ACT }}
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Set up Maven
          uses: stCarolas/setup-maven@v4
          if: ${{ env.ACT }}
          with:
            maven-version: 3.8.1

        - name: Run unit tests
          if: ${{ env.ACT }}
          run: mvn --version

        - name: Run unit tests
          run: mvn -B test -q --file tomcat/pom.xml

    tomcat_local_apply_setup_test:
       runs-on: ubuntu-latest
       steps:
        - name: Checkout
          uses: actions/checkout@v2
  
        - name: Set up Helm
          uses: azure/setup-helm@v1
          with:
            version: v3.4.0
  
        - uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: test
          if: ${{ !env.ACT }}
          run: |
            mkdir -p /etc/docker
            echo -n "{\"exec-opts\": [\"native.cgroupdriver=systemd\"],\"log-driver\": \"json-file\",\"log-opts\": {\"max-size\": \"100m\"},\"storage-driver\": \"overlay2\"}" > /etc/docker/daemon.json
            cat /etc/docker/daemon.json
            sudo service docker status

        - name: Create Kubernetes KinD Cluster
          uses: container-tools/kind-action@v1.5.0
          with:
            cluster_name: tomcat-local-apply
            registry: true
            
       # - name: Create kind cluster
       #   uses: helm/kind-action@v1.2.0
       #   with:
       #     cluster_name: tomcat-local-apply #${{ job.name }}
       #     registry: true
       #   # docker stop tomcat-local-apply-control-plane ; docker rm tomcat-local-apply-control-plane ; sleep 1

        - name: Apply CRDs
          run: kubectl apply -f tomcat/k8s/crd.yaml

        - name: Set up Java and Maven
          uses: actions/setup-java@v2
          with:
            # java-version: ${{ matrix.java }}
            java-version: 15
            distribution: adopt-hotspot

        - name: cache
          uses: actions/cache@v2
          if: ${{ !env.ACT }}
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Set up Maven
          uses: stCarolas/setup-maven@v4
          if: ${{ env.ACT }}
          with:
            maven-version: 3.8.1

        - name: check that kube is empty
          run: kubectl get tomcats,webapps,po

        - name: test local registry
          run: |
            # Checking env variable
            if [[ "$KIND_REGISTRY" != "localhost:5000" ]]; then
              echo "Wrong KIND_REGISTRY env variable: $KIND_REGISTRY"
              exit 1
            fi
            docker pull busybox
            docker tag busybox localhost:5000/localbusybox
            docker push localhost:5000/localbusybox

        - name: build jib
          run: mvn install jib:dockerBuild jib:build -Djib.to.image=localhost:5000/io.javaoperatorsdk/sample:1.7.1-SNAPSHOT --file tomcat/pom.xml -DskipTests

        - name: build jib
          run: docker images

        - name: install tomcat operator
          run: kubectl apply -f tomcat/k8s/operator.yaml

        - name: install sample operators
          run: kubectl create ns tomcatoperator-sample

        - name: install sample operators
          run: for sample in $(ls tomcat/k8s/*sample*); do echo kubectl -n tomcatoperator-sample apply -f $sample; done 

        - name: wait for sample operators
          run: |
            LOOP=0 &&\
            while [[ $(kubectl get pods -n tomcat-operator -l app=tomcat-operator -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do \
              echo "waiting for pod" &&\
              kubectl logs -n tomcat-operator -l app=tomcat-operator &&\
              (( LOOP++ )) &&\
              if [[ $LOOP -gt 10 ]]; then break; fi &&\
              echo "loop number $LOOP" &&\
              sleep 5; \
            done

        - name: check operators
          run: kubectl get deploy,tomcats,webapps,po -n tomcatoperator-sample


        - name: check operators
          run: kubectl get deploy,tomcats,webapps,po -n tomcat-operator
